/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 .\static\models\male\model.gltf -t 
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    characterMedium: THREE.SkinnedMesh;
    LeftFootCtrl: THREE.Bone;
    RightFootCtrl: THREE.Bone;
    HipsCtrl: THREE.Bone;
  };
  materials: {
    ['skin.001']: THREE.MeshStandardMaterial;
  };
  animations: any; //GLTFAction[]
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements['skinnedMesh'] | JSX.IntrinsicElements['bone']>
>;

const Character = (props: JSX.IntrinsicElements['group']) => {
  const { nodes, materials } = useGLTF('models/male/model.gltf') as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group scale={0.64}>
        <primitive object={nodes.LeftFootCtrl} />
        <primitive object={nodes.RightFootCtrl} />
        <primitive object={nodes.HipsCtrl} />
        <skinnedMesh
          geometry={nodes.characterMedium.geometry}
          material={materials['skin.001']}
          skeleton={nodes.characterMedium.skeleton}
          castShadow
        />
      </group>
    </group>
  );
};

useGLTF.preload('models/male/model.gltf');
export default Character;

