/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/traffic_sign.glb -t 
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF, useTexture } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { CuboidCollider, RigidBody, TrimeshCollider } from '@react-three/rapier'

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh
    Cube001: THREE.Mesh
    Cube002: THREE.Mesh
    Projects: THREE.Mesh
    Projects001: THREE.Mesh
  }
  materials: {
    Material: THREE.MeshStandardMaterial
  }
  animations: any[]
}

export function TrafficSign(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/traffic_sign.glb') as GLTFResult

  const texture = useTexture('/textures/wood.jpg')

  return (
    <RigidBody type="fixed" colliders={false}>
      <group {...props} dispose={null}>
        <CuboidCollider args={[0.2, 1.4, 0.2]} position={[-0.6, 1.5, -0.5]} />

        <mesh geometry={nodes.Cube.geometry} position={[0, 3.014, 0]} rotation={[0, 0, -Math.PI]} scale={[0.233, 3.146, 0.219]}>
          <meshStandardMaterial map={texture} color={'#999999'} />
        </mesh>

        <mesh geometry={nodes.Cube001.geometry} position={[-0.2, 4.902, 0.313]} rotation={[0, 0, 0.07]} scale={[2, 0.439, 0.09]}>
          <meshStandardMaterial map={texture} color={'#999999'} />
        </mesh>

        <mesh geometry={nodes.Cube002.geometry} position={[0.2, 3.028, 0.313]} rotation={[-Math.PI, 0, -3.054]} scale={[2, 0.439, 0.09]}>
          <meshStandardMaterial map={texture} color={'#999999'} />
        </mesh>

        <mesh geometry={nodes.Projects.geometry} position={[-1.04, 4.702, 0.41]} rotation={[Math.PI / 2, 0.07, 0]} scale={0.644}>
          <meshStandardMaterial map={texture} color={'#666666'} />
        </mesh>

        <mesh geometry={nodes.Projects001.geometry} position={[-1.244, 2.965, 0.41]} rotation={[Math.PI / 2, -0.087, 0]} scale={0.644}>
          <meshStandardMaterial map={texture} color={'#666666'} />
        </mesh>
      </group></RigidBody>
  )
}

useGLTF.preload('/models/traffic_sign.glb')
