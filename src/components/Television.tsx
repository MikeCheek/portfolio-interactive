/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 public/assets/models/Television.glb --types -t 
*/

import React from 'react';
import { Image, useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { RigidBody } from '@react-three/rapier';
import { extend } from '@react-three/fiber';
import { Mesh, MeshStandardMaterial } from 'three';
import { geometry } from 'maath';
import CollidableText from './CollidableText';

type GLTFResult = GLTF & {
  nodes: {
    televisionModern_2: Mesh;
    televisionModern_2_1: Mesh;
    televisionModern_3: Mesh;
    televisionModern_3_1: Mesh;
  };
  materials: {
    metalDark: MeshStandardMaterial;
    metal: MeshStandardMaterial;
  };
  animations: any[];
};

type Body = JSX.IntrinsicElements['group'];

interface TelevisionTypes extends Body {
  imageUrl?: string;
  title?: string;
  description?: string;
  href?: string,
  github?: string
}

extend({ RoundedPlaneGeometry: geometry.RoundedPlaneGeometry });

export function Television({ imageUrl, title, rotation, position, description, href, github, ...props }: TelevisionTypes) {
  const { nodes, materials } = useGLTF('/assets/models/Television.glb') as GLTFResult;
  return (
    <RigidBody name="television" rotation={rotation} position={position}>
      <group scale={[10, 10, 10]}>
        <group {...props} dispose={null}>
          <mesh geometry={nodes.televisionModern_2.geometry} material={materials.metalDark} />
          <mesh geometry={nodes.televisionModern_2_1.geometry} material={materials.metal} />
          <mesh geometry={nodes.televisionModern_3.geometry} material={materials.metal} />
          <mesh geometry={nodes.televisionModern_3_1.geometry} material={materials.metalDark} />
        </group>
        {imageUrl ? (
          <Image url={imageUrl} rotation={[0, Math.PI, 0]} position={[0, 0.265, -0.03]}>
            {/* @ts-ignore */}
            <roundedPlaneGeometry args={[0.67, 0.37, 0]} />
          </Image>
        ) : (
          <></>
        )}
      </group>
      {title ? (
        <CollidableText title={title} description={description} href={href} github={github} />
      ) : (
        <></>
      )}
    </RigidBody>
  );
}

useGLTF.preload('/assets/models/Television.glb');

